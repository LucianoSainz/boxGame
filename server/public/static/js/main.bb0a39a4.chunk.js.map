{"version":3,"sources":["components/navbar/logo.png","components/navbar/logo_transparent.png","services/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/Home/Home.js","services/Service.js","components/Home/GameDetail.js","components/Home/ConsolesDetails.js","components/footer/Footer.js","components/addGame/AddGame.js","components/addConsoles/AddConsoles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","src","logo","alt","width","heith","to","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","placeholder","onChange","Login","history","push","Home","console","log","games","map","game","_id","imageUrl","title","consoles","consol","consoleModel","Service","getGames","getConsoles","addGame","newGame","userId","addConsoles","newConsoles","theFile","id","delete","GameDetail","deleteGame","onDeleteGame","fetchGames","allGames","filter","match","params","gender","year","description","contact","price","React","ConsolesDetails","deleteConsole","onDeleteConsole","fetchConsoles","allConsoles","controlIncluded","memoryCapacity","gameIncluded","Footer","handleTypeInput","handleTitleInput","handleGenderInput","handleYearInput","handleFileUpload","files","uploadData","FormData","append","handleUploadGames","secure_url","err","handleDescriptionInput","handlePriceInput","handleContactInput","required","AddConsoles","handleConsoleModelInput","handleControlIncludedInput","handleMemoryCapacityInput","handleGameIncludedInput","handleUploadConsoles","App","userObj","authService","respose","fetchUser","Fragment","userInSession","exact","path","render","AddGame","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bb0a39a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff02283c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.f3bf9747.png\";","// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport AuthService from \"../../services/AuthService\";\nimport \"./Navbar.scss\"\nimport logo from \"../navbar/logo.png\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"menu\">\n          <div>\n            <img src={logo} alt=\"\" width=\"80\" heith=\"85\" />\n          </div>\n          <div className=\"one\">\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/\">Home</Link>\n            </div>\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/addGame\">AddGame</Link>\n            </div>\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/addConsoles\">AddConsoles</Link>\n            </div>\n            <div className=\"two\">\n              <a onClick={this.handleLogout}>Logout</a>\n            </div>\n          </div>\n        </nav>\n     \n      );\n\n    } else {\n      return (\n        <div>\n          <nav className=\"menu\">\n            <div>\n              <img src={logo} alt=\"\" width=\"80\" heith=\"85\" />\n            </div>\n            <div className=\"one\">\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/login\">Login</Link>\n              </div>\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/signup\">Signup</Link>\n              </div>\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/\">Home</Link>\n              </div>\n\n            </div>\n\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../services/AuthService'\nimport { Link } from 'react-router-dom';\nimport \"./Login.scss\"\n\n\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n\n  render() {\n    return (<div>\n      <h3 className=\"titleOne\">Signup</h3>\n\n      <div className=\"login\">\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"user\"></label>\n            <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n            <label className=\"password\"></label>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n          </fieldset>\n\n\n          <div className=\"botton\">\n            <input type=\"submit\" value=\"Sign up\" />\n          </div>\n\n        </form>\n      </div>\n\n      <div>\n        <nav className=\"link\">\n          <Link to=\"/login\">do you have an account? login</Link>\n        </nav>\n      </div>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>\n\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService'; \nimport \"./Login.scss\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        }, ()=> {this.props.history.push('/')}\n        );\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3 className=\"titleOne\">login</h3>\n\n      <div className=\"login\">\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n       <label className=\"user\"></label>\n          <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label className=\"password\"></label>\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n\n       <div className=\"botton\">\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n       \n        </form>\n\n       </div>\n\n       <div>\n        <nav className=\"link\">\n              <Link to=\"/signup\">You still don't have an account: Signup</Link>\n        </nav>\n      </div>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from \"react-router-dom\"\nimport logo from \"../navbar/logo_transparent.png\";\nimport \"./Home.scss\"\n\nfunction Home(props) {\nconsole.log(props.games)\n    return (\n        \n          <div>\n            <header className=\"logo\">\n            <img src={logo} alt=\"\" width=\"500\" heith=\"300\"/>\n            </header>\n\n        {/* SECTION GAMES */}\n        <div className=\"all\">\n        <div className=\"games\">\n          <h3>our best offers Games</h3>\n        \n          {\n            props.games.map(game =>(\n            <Link to={\"game/\"+game._id}>\n            \n              <div className=\"infoGame\">\n                  <img className=\"infoImg\"src={game.imageUrl} alt=\"\"/>\n                  <div>\n                  <h4>{game.title}</h4>\n                  </div>\n              </div>\n            </Link>\n            \n          ))}\n        </div>\n      \n\n      {/* SECTION CONSOLES */}\n      \n      <div className=\"consoles\" >\n        <h3>our best deals on consoles</h3>\n          {props.consoles.map(consol => (\n              <Link to={\"consoles/\"+consol._id}>\n                <div className=\"infoGame\">\n                  <img className=\"infoImg\" src={consol.imageUrl} alt=\"\"/>\n                  <div>\n                  <h4>{consol.consoleModel}</h4>\n                  </div>\n              </div>\n              </Link>\n          ))}\n        </div>\n      </div>\n     \n     \n       </div>\n\n    )\n}\n\nexport default Home;\n\n\n\n","import axios from 'axios';\nclass Service {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true\n    });\n  }\n  getGames = () => {\n    return this.service.get(\"/games\")\n      .then(response => response.data)\n  }\n  getConsoles = () => {\n    return this.service.get(\"/consoles\")\n      .then(response => response.data)\n  }\n  handleUploadGames (theFile) {\n     console.log('file in service: ', theFile)\n    return this.service.post('/games/upload', theFile)\n      .then(response =>  response.data)  \n  }\n  addGame = (newGame, userId) => {\n    return this.service.post(`/games/add-game/${userId}`, newGame)\n    .then(response =>  response.data)  \n  }\n    handleUploadConsoles (theFile) {\n    console.log('file in service: ', theFile)\n   return this.service.post('/consoles/upload', theFile)\n     .then(response =>  response.data)\n}\n  addConsoles = (newConsoles, userId) => {\n    return this.service.post(`/consoles/add-consoles/${userId}`, newConsoles)\n    .then(response => response.data)\n  }\n\n  deleteGame(id) {\n    return this.service.delete(`/games/${id}`)\n     .then(response => response.data)\n  }\n  deleteConsole(id) {\n    return this.service.delete(`/consoles/${id}`)\n     .then(response => response.data)\n  }\n} \nexport default Service;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport \"./GameDetail.scss\"\nimport axios from \"axios\";\nimport Service from \"../../services/Service\"\n\nclass GameDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.service = new Service()\n    }   \n\n    componentDidMount() {\n        return this.props.fetchGames()\n    }\n\n\n    deleteGame = (id) => {\n        this.props.onDeleteGame(id)\n      }\n\n    render () {\n        return (\n            <div>\n               \n            \n            <div className=\"gameTitle\">\n            {this.props.allGames\n            .filter(game => game._id === this.props.match.params.id)\n            .map(game => ( \n                <div>\n                <div className=\"gameDet\" >\n                \n                <img src= {game.imageUrl} /> \n                <p><strong>console:</strong> {game.type}</p>\n                <p><strong>title:</strong> {game.title}</p>\n                <p><strong>gender:</strong>{game.gender}</p>\n                <p><strong>year:</strong> {game.year}</p>\n                <p><strong>description:</strong> {game.description}</p>\n                <p><strong>contact:</strong>{game.contact}</p>\n                <p><strong>price:</strong> {game.price } €</p>\n                <button className=\"btn\" onClick={() => this.deleteGame(game._id)}>🗑 delete</button>\n               \n                \n                \n                \n                </div>\n             </div>\n            )\n\n            \n            )}\n            </div>\n            </div>\n        )\n    }\n\n}\n\nexport default GameDetail","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport \"./ConsoleDetails.scss\"\nimport Service from \"../../services/Service\"\n\nclass ConsolesDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.service = new Service()\n    }   \n\n    componentDidMount() {\n        return this.props.fetchConsoles()\n    }\n\n    deleteConsole = (id) => {\n        this.props.onDeleteConsole(id)\n      }\n   \n    render () {\n        return (\n            <div>\n\n            <div className=\"gameTitle\">\n            {this.props.allConsoles\n            .filter(consoles => consoles._id === this.props.match.params.id)\n            .map(consoles => (\n                <div>\n                <div className=\"gameDet\" >\n                <img src= {consoles.imageUrl} /> \n                <p><strong>console:</strong> {consoles.consoleModel}</p>\n                <p><strong>controls:</strong> {consoles.controlIncluded}</p>\n                <p><strong>memory:</strong> {consoles.memoryCapacity}</p>\n                <p><strong>included game:</strong> {consoles.gameIncluded}</p>\n                <p><strong>description:</strong> {consoles.description}</p>\n                <p><strong>contact:</strong> {consoles.contact}</p>\n                <p><strong>price:</strong> {consoles.price } €</p>\n                <button className=\"btn\" onClick={() => this.deleteConsole(consoles._id)}>🗑 delete</button>\n                </div>\n              </div>\n            )\n\n            \n            )}\n            </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ConsolesDetails","import React from 'react';\nimport \"./Footer.scss\"\nimport logo from \"../navbar/logo.png\";\n\n\nfunction Footer() {\n    return (\n        <footer>\n        <h5>created by luci@no sanchez for ironhack</h5>\n        <img src={logo} alt=\"\" width=\"70\" heith=\"75\" />\n      </footer>\n     \n    )\n}\n\n\nexport default Footer;","import React from 'react';\nimport Service from '../../services/Service';\nimport './addGame.scss';\n\n\nclass addGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: '',\n      title: '',\n      gender: '',\n      year: '',\n      imageUrl: '',\n      description: '',\n      price: '',\n      contact:''\n    };\n    this.service = new Service();\n  }\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.service.addGame(this.state, this.props.user._id)\n        .then(response => {\n            this.setState({\n                type: \"\",\n                title: \"\",\n                gender: \"\",\n                year: \"\",\n                imageUrl: \"\",\n                description: \"\",\n                price: \"\",\n                contact:'',\n            }, () => this.props.history.push('/home'))\n        })\n        .catch(error => {\n            console.log('catch')\n            console.log(error)\n        })\n  };\n  handleTypeInput = event => {\n    this.setState({\n      type: event.target.value\n    });\n  };\n  handleTitleInput = event => {\n    this.setState({\n      title: event.target.value\n    });\n  };\n  handleGenderInput = event => {\n    this.setState({\n      gender: event.target.value\n    });\n  };\n  handleYearInput = event => {\n    this.setState({\n      year: event.target.value\n    });\n  };\n  handleFileUpload = e => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n    const uploadData = new FormData();\n    uploadData.append('imageUrl', e.target.files[0]);\n    this.service\n      .handleUploadGames(uploadData)\n      .then(response => {\n        this.setState({ imageUrl: response.secure_url }, () =>\n          console.log(this.state)\n        );\n      })\n      .catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n  };\n  handleDescriptionInput = event => {\n    this.setState({\n      description: event.target.value\n    });\n  };\n  handlePriceInput = event => {\n    this.setState({\n      price: event.target.value\n    });\n  };\n  handleContactInput = event => {\n    this.setState({\n      contact: event.target.value\n    });\n  }\n  render() {\n    return (\n      <div>\n      <div className='formular'>\n        <form onSubmit={this.handleFormSubmit} className=\"form\">\n          <h4 className=\"title\">Add the game you want to sell</h4>\n        \n          <div>\n          <label>Console:</label>\n          <input\n            type='text'\n            name='type'\n            required\n            placeholder=\"PS3\"\n            value={this.state.type}\n            onChange={e => this.handleTypeInput(e)}\n          />\n          </div>\n          <div>\n          <label>Title:</label>\n          <input\n            type='text'\n            name='title'\n            required\n            placeholder=\"Sonic\"\n            value={this.state.title}\n            onChange={e => this.handleTitleInput(e)}\n          />\n          </div>\n          <div>\n          <label>Gender:</label>\n          <input\n            type='text'\n            name='gender'\n            required\n            placeholder=\"adventure\"\n            value={this.state.gender}\n            onChange={e => this.handleGenderInput(e)}\n          />\n          </div>\n          <div>\n          <label>Year:</label>\n          <input\n            type='number'\n            name='year'\n            required\n            placeholder=\"2012\"\n            value={this.state.year}\n            onChange={e => this.handleYearInput(e)}\n          />\n          </div>\n          <div>\n          <label>image:</label>\n          <input\n            type='file'\n            name='imageUrl'\n            required\n            onChange={e => this.handleFileUpload(e)}\n          />\n          </div>\n          <div>\n          <label>Description:</label>\n          <textarea\n            type='text'\n            name='description'\n            required\n            placeholder=\"game with little use\"\n            value={this.state.description}\n            onChange={e => this.handleDescriptionInput(e)}\n          />\n          </div>\n          <div>\n          <label>Cotact:</label>\n          <input\n            type='text'\n            name='email'\n            required\n            placeholder=\"boxgame@gmail.com\"\n            value={this.state.contact}\n            onChange={e => this.handleContactInput(e)}\n          />\n          </div>\n          <div>\n          <label>Price:</label>\n          <input\n            type='number'\n            name='price'\n            required\n            placeholder=\"20\"\n            value={this.state.price}\n            onChange={e => this.handlePriceInput(e)}\n          />\n          </div>\n          <div>\n          <button className=\"botons\" type='submit' value='submit'>Submit</button>\n        </div>\n        \n        </form>\n      </div>\n      </div>\n      \n    );\n  }\n}\nexport default addGame;","import React from 'react';\nimport Service from '../../services/Service';\nimport './addConsoles.scss';\n\n\nclass AddConsoles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            consoleModel: \"\",\n            controlIncluded: \"\",\n            memoryCapacity: \"\",\n            gameIncluded: \"\",\n            imageUrl: \"\",\n            description: \"\",\n            price: \"\",\n            contact: ''\n\n        };\n        this.service = new Service();\n    }\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        this.service.addConsoles(this.state, this.props.user._id)\n            .then(response => {\n                this.setState({\n                    consoleModel: \"\",\n                    controlIncluded: \"\",\n                    memoryCapacity: \"\",\n                    gameIncluded: \"\",\n                    imageUrl: \"\",\n                    description: \"\",\n                    price: \"\",\n                    contact: '',\n                }, () => this.props.history.push('/home'))\n            })\n            .catch(error => {\n                console.log('catch')\n                console.log(error)\n            })\n    };\n\n\n    handleConsoleModelInput = (event) => {\n        this.setState({\n            consoleModel: event.target.value\n        })\n    }\n\n    handleControlIncludedInput = (event) => {\n        this.setState({\n            controlIncluded: event.target.value\n        })\n    }\n    handleMemoryCapacityInput = (event) => {\n        this.setState({\n            memoryCapacity: event.target.value\n        })\n    }\n    handleGameIncludedInput = (event) => {\n        this.setState({\n            gameIncluded: event.target.value\n        })\n    }\n\n\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n        const uploadData = new FormData();\n\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n        this.service.handleUploadConsoles(uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({ imageUrl: response.secure_url }, () => console.log(this.state));\n            })\n            .catch(err => {\n                console.log(\"Error while uploading the file: \", err);\n            });\n    }\n\n    handleDescriptionInput = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n    handlePriceInput = (event) => {\n        this.setState({\n            price: event.target.value\n        })\n    }\n\n    handleContactInput = event => {\n        this.setState({\n            contact: event.target.value\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className='formular'>\n                    <form onSubmit={this.handleFormSubmit}>\n                        <h4 className=\"title\">Add the console you want to sell</h4>\n\n                        <div>\n                            <label>Console Model:</label>\n                            <input\n                                type='text'\n                                name='consoleModel'\n                                required\n                                placeholder=\"Nintendo\"\n                                value={this.state.consoleModel}\n                                onChange={(e) => this.handleConsoleModelInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Control Included:</label>\n                            <input\n                                type='number'\n                                name='controlIncluded'\n                                required\n                                placeholder=\"2\"\n                                value={this.state.controlIncluded}\n                                onChange={(e) => this.handleControlIncludedInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Memory Capacity:</label>\n                            <input\n                                type='number'\n                                name='MemoryCapacity'\n                                required\n                                placeholder=\"16\"\n                                value={this.state.memoryCapacity}\n                                onChange={e => this.handleMemoryCapacityInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Game Included:</label>\n                            <input\n                                type='text'\n                                name='GameIncluded'\n                                required\n                                placeholder=\"Mario Bros\"\n                                value={this.state.gameIncluded}\n                                onChange={e => this.handleGameIncludedInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Image:</label>\n                            <input\n                                type=\"file\"\n                                name=\"imageUrl\"\n                                required\n                                onChange={e => this.handleFileUpload(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Desription:</label>\n                            <textarea\n                                type=\"text\"\n                                name=\"description\"\n                                required\n                                placeholder=\"console in good condition\"\n                                value={this.state.description}\n                                onChange={e => this.handleDescriptionInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <label>Contact:</label>\n                            <input\n                                type='text'\n                                name='email'\n                                required\n                                placeholder=\"boxgame@gmail.com\"\n                                value={this.state.contact}\n                                onChange={e => this.handleContactInput(e)}\n                            />\n                        </div>\n\n                        <div>\n                            <label>Price:</label>\n                            <input\n                                type=\"number\"\n                                name=\"price\"\n                                required\n                                placeholder=\"20\"\n                                value={this.state.price}\n                                onChange={e => this.handlePriceInput(e)}\n                            />\n                        </div>\n                        <div>\n                            <button className=\"botons\" type=\"submit\" value=\"Submit\">Submit</button> \n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddConsoles;\n\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link, Redirect} from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from './components/Home/Home';\nimport GameDetail from \"./components/Home/GameDetail\";\nimport ConsolesDetails from \"./components/Home/ConsolesDetails\";\nimport Footer from \"./components/footer/Footer\";\nimport Service from './services/Service';\nimport AuthService from \"./services/AuthService\";\nimport AddGame from \"./components/addGame/AddGame\";\nimport AddConsoles from \"./components/addConsoles/AddConsoles\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      games:[],\n      consoles:[],\n      loggedInUser: null,\n      \n    }\n\n    this.service = new Service()\n    this.authService = new AuthService();\n    this.fetchUser();\n  }\n\n  componentDidMount() {\n    console.log(this.state.loggedInUser)\n    this.fetchGames();\n    \n\n   \n   \n    this.service.getConsoles()\n    .then(response => {\n      this.setState({\n        consoles: response\n      })\n\n    })\n  }\n\n  fetchGames = () => {\n    this.service.getGames()\n    .then(response => {\n      this.setState({\n        games:response\n      })\n    })\n  }\n\n  fetchConsoles = () => {\n    this.service.getConsoles()\n    .then(response => {\n      this.setState({\n        consoles: response\n      })\n    })\n  }\n \n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.authService.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.authService\n    .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        }, () => console.log(this.state));\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  deleteExistingGames(id) {\n    console.log('entra aqui')\n    console.log(id)\n    this.service.deleteGame(id)\n    // .then(loquesea)\n  }\n\n  deleteGame = (id) => {\n    return this.service.deleteGame(id)\n    .then(response =>{\n      this.fetchGames()\n    })\n  }\n\n  deleteConsole = (id) => {\n    return this.service.deleteConsole(id)\n    .then(respose =>{\n     this.fetchConsoles()\n    })\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          \n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header> \n            <main>\n              \n              <Switch>\n                <Route exact path=\"/\" render={()=><Home consoles={this.state.consoles}  games={this.state.games} ></Home>} /> \n                <Route exact path=\"/addGame\" render={(props)=><AddGame user={this.state.loggedInUser} {...props}></AddGame>} /> \n                <Route exact path=\"/addConsoles\" render={(props)=><AddConsoles user={this.state.loggedInUser} {...props}></AddConsoles>} />  \n                <Route exact path=\"/game/:id\" render={(props) =><GameDetail fetchGames={this.fetchGames} allGames={this.state.games} {...props}  onDeleteGame={id => this.deleteGame(id)}></GameDetail>} />\n                <Route exact path=\"/consoles/:id\" render={(props) =><ConsolesDetails fetchConsoles={this.fetchConsoles} allConsoles={this.state.consoles} {...props} onDeleteConsole={id => this.deleteConsole(id)}></ConsolesDetails>} />\n              </Switch> \n              <Footer></Footer>\n            </main>\n           \n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n         \n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header>\n            <main>\n              <Switch>\n                <Route exact path=\"/\" render={()=><Home consoles={this.state.consoles} games={this.state.games}></Home>} />              \n                <Route exact path=\"/login\" render={(props) => <Login {...props} getUser={this.getUser} />} />\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/game/:id\" render={(props) =><Redirect to = \"/login\"/>} />\n                <Route exact path=\"/consoles/:id\" render={(props) =><Redirect to =\"/login\"/>} />\n              </Switch>\n              <Footer></Footer>\n              \n            </main>\n          </div>\n          \n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n\n\n//()=>{\n  //   console.log(this.props)\n    // this.props.history.push(\"/\")","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}