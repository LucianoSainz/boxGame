{"version":3,"sources":["components/navbar/logo.png","components/navbar/logo_transparent.png","services/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/Home/Home.js","components/Home/GameDetail.js","components/Home/ConsolesDetails.js","components/footer/Footer.js","services/Service.js","components/addGame/AddGame.js","components/addConsoles/AddConsoles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","src","logo","alt","width","heith","to","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","placeholder","onChange","Login","Home","games","map","game","_id","photo","title","consoles","consol","consoleModel","GameDetail","fetchGames","allGames","filter","match","params","id","React","ConsolesDetails","fetchConsoles","allConsoles","Footer","Service","getGames","getConsoles","getAddGame","getAddConsoles","AddConsoles","console","log","prevetDefault","gender","year","img","description","price","handleTypeInput","handleTitleInput","handleGenderInput","handleYearInput","handleImgInput","handleDescriptionInput","handlePriceInput","controlIncluded","memoryCapacity","gameIncluded","getNewAddConsoles","handleConsoleModelInput","handleControlIncludedInput","handleMemoryCapacityInput","handleGameIncludedInput","App","userObj","authService","fetchUser","err","Fragment","userInSession","exact","path","render","AddGame","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,wCCA3CD,EAAOC,QAAU,IAA0B,8C,uRCgC5BC,EA5Bb,aAAe,IAAD,gCAOdC,OAAS,SAACC,EAAUC,GAClB,OAAO,EAAKC,QAAQC,KAAK,UAAW,CAACH,WAAUC,aAC9CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATf,KAYdC,MAAQ,SAACP,EAAUC,GACjB,OAAO,EAAKC,QAAQC,KAAK,SAAU,CAACH,WAAUC,aAC7CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdf,KAiBdE,SAAW,WACT,OAAO,EAAKN,QAAQO,IAAI,gBACvBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAnBf,KAsBdI,OAAS,WACP,OAAO,EAAKR,QAAQC,KAAK,WACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAvB3BK,KAAKT,QAAUU,IAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKC,oCAAL,SACPC,iBAAiB,K,yBCoERC,E,YAlEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KASRC,aAAe,SAAAC,GACb,EAAKF,MAAMR,UATX,EAAKW,MAAQ,CAAEC,aAAc,MAC7B,EAAKpB,QAAU,IAAIJ,EAHF,E,uFAMOyB,GACxBZ,KAAKa,SAAL,eAAmBb,KAAKU,MAAxB,CAA+BC,aAAcC,EAAS,mB,+BAQtD,OAAIZ,KAAKU,MAAMC,aAEX,yBAAKG,UAAU,QACb,6BACE,yBAAKC,IAAKC,IAAMC,IAAI,GAAGC,MAAM,KAAKC,MAAM,QAE1C,yBAAKL,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,SAA3B,SAEF,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,YAA3B,YAEF,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,gBAA3B,gBAEF,yBAAKN,UAAU,OACb,uBAAGO,QAASrB,KAAKQ,cAAjB,aASN,6BACE,yBAAKM,UAAU,QACb,6BACE,yBAAKC,IAAKC,IAAMC,IAAI,GAAGC,MAAM,KAAKC,MAAM,QAE1C,yBAAKL,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,UAA3B,UAEF,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,WAA3B,WAEF,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,QAAQM,GAAG,SAA3B,gB,GAvDKE,a,QC4ENC,G,kBA3Eb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KAKRiB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAMrC,EAAW,EAAKqB,MAAMrB,SACtBC,EAAW,EAAKoB,MAAMpB,SAG5B,EAAKC,QAAQH,OAAOC,EAAUC,GAC3BG,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZxB,SAAU,GACVC,SAAU,KAKZ,EAAKiB,MAAMoB,QAAQjC,EAASkC,SAE7BC,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZxB,SAAUA,EACVC,SAAUA,EACVwC,OAAO,QA3BI,EAgCnBC,aAAe,SAACN,GAAW,IAAD,EACAA,EAAMO,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KAhCxB,EAAKxB,MAAQ,CAAErB,SAAU,GAAIC,SAAU,IACvC,EAAKC,QAAU,IAAIJ,EAHF,E,sEAsCT,IAAD,OACP,OAAQ,6BACN,wBAAI2B,UAAU,YAAd,UAEA,yBAAKA,UAAU,SACb,0BAAMqB,SAAUnC,KAAKwB,kBACnB,kCACE,2BAAOV,UAAU,SACjB,2BAAOsB,KAAK,OAAOH,KAAK,WAAWI,YAAY,WAAWH,MAAOlC,KAAKU,MAAMrB,SAAUiD,SAAU,SAAA7B,GAAC,OAAI,EAAKsB,aAAatB,OAGzH,kCACE,2BAAOK,UAAU,aACjB,2BAAOsB,KAAK,WAAWH,KAAK,WAAWI,YAAY,WAAWH,MAAOlC,KAAKU,MAAMpB,SAAUgD,SAAU,SAAA7B,GAAC,OAAI,EAAKsB,aAAatB,OAI7H,yBAAKK,UAAU,UACb,2BAAOsB,KAAK,SAASF,MAAM,eAMjC,6BACE,yBAAKpB,UAAU,QACb,kBAAC,IAAD,CAAMM,GAAG,UAAT,mCAIJ,4BAAKpB,KAAKU,MAAMoB,MAAQ,QAAU,S,GArEnBR,cCwENiB,E,YAzEb,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KAKRiB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAMrC,EAAW,EAAKqB,MAAMrB,SACtBC,EAAW,EAAKoB,MAAMpB,SAE5B,EAAKC,QAAQK,MAAMP,EAAUC,GAC1BG,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZxB,SAAUA,EACVC,SAAUA,EACVwC,OAAO,IAGT,EAAKvB,MAAMoB,QAAQjC,MAEpBmC,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZxB,SAAUA,EACVC,SAAUA,EACVwC,OAAO,QAzBI,EA8BnBC,aAAe,SAACN,GAAW,IAAD,EACAA,EAAMO,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA9BxB,EAAKxB,MAAQ,CAAErB,SAAU,GAAIC,SAAU,IACvC,EAAKC,QAAU,IAAIJ,EAHF,E,sEAmCT,IAAD,OAEP,OAAQ,6BACN,wBAAI2B,UAAU,YAAd,SAEA,yBAAKA,UAAU,SACf,0BAAMqB,SAAUnC,KAAKwB,kBACnB,kCACD,2BAAOV,UAAU,SACd,2BAAOsB,KAAK,OAAOH,KAAK,WAAWI,YAAY,WAAWH,MAAOlC,KAAKU,MAAMrB,SAAUiD,SAAU,SAAA7B,GAAC,OAAI,EAAKsB,aAAatB,OAGzH,kCACE,2BAAOK,UAAU,aACjB,2BAAOsB,KAAK,WAAWH,KAAK,WAAWI,YAAY,WAAWH,MAAOlC,KAAKU,MAAMpB,SAAUgD,SAAU,SAAA7B,GAAC,OAAI,EAAKsB,aAAatB,OAI9H,yBAAKK,UAAU,UACd,2BAAOsB,KAAK,SAASF,MAAM,aAO5B,6BACC,yBAAKpB,UAAU,QACT,kBAAC,IAAD,CAAMM,GAAG,WAAT,6CAIR,4BAAKpB,KAAKU,MAAMoB,MAAQ,QAAU,S,GApEpBR,a,uBC6CLkB,MA7Cf,SAAcjC,GAEV,OAEM,6BACE,4BAAQO,UAAU,QAClB,yBAAKC,IAAKC,IAAMC,IAAI,GAAGC,MAAM,MAAMC,MAAM,SAI7C,yBAAKL,UAAU,OACf,yBAAKA,UAAU,SACb,sDACCP,EAAMkC,MAAMC,KAAI,SAAAC,GAAI,OACnB,kBAAC,IAAD,CAAMvB,GAAI,QAAQuB,EAAKC,KACrB,6BACI,yBAAK7B,IAAK4B,EAAKE,MAAO5B,IAAI,KAC1B,4BAAK0B,EAAKG,aAStB,yBAAKhC,UAAU,YACb,2DACGP,EAAMwC,SAASL,KAAI,SAAAM,GAAM,OACtB,kBAAC,IAAD,CAAM5B,GAAI,WAAW4B,EAAOJ,KAC1B,6BACE,yBAAK7B,IAAKiC,EAAOH,MAAO5B,IAAI,KAC5B,4BAAK+B,EAAOC,uBCLfC,E,YA5BX,WAAY3C,GAAQ,qEACVA,I,iFAIN,OAAOP,KAAKO,MAAM4C,e,+BAIX,IAAD,OACN,OACI,6BACCnD,KAAKO,MAAM6C,SACXC,QAAO,SAAAV,GAAI,OAAIA,EAAKC,MAAQ,EAAKrC,MAAM+C,MAAMC,OAAOC,MACpDd,KAAI,SAAAC,GAAI,OACLA,EAAKG,c,GAhBIW,IAAMnC,WC4BhBoC,E,YA3BX,WAAYnD,GAAQ,qEACVA,I,iFAIN,OAAOP,KAAKO,MAAMoD,kB,+BAIX,IAAD,OACN,OACI,6BACC3D,KAAKO,MAAMqD,YACXP,QAAO,SAAAN,GAAQ,OAAIA,EAASH,MAAQ,EAAKrC,MAAM+C,MAAMC,OAAOC,MAC5Dd,KAAI,SAAAK,GAAQ,OACTA,EAASE,qB,GAhBKQ,IAAMnC,W,MCUrBuC,MAVf,WACI,OACI,gCACA,yECwBOC,EA5Bb,aAAe,IAAD,gCAOdC,SAAW,WACT,OAAO,EAAKxE,QAAQO,IAAI,UACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATjB,KAYdqE,YAAc,WACZ,OAAO,EAAKzE,QAAQO,IAAI,aACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdjB,KAiBdsE,WAAa,WACX,OAAO,EAAK1E,QAAQO,IAAI,YACvBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAnBf,KAsBduE,eAAiB,WACf,OAAO,EAAK3E,QAAQO,IAAI,eACvBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAvB3BK,KAAKT,QAAUU,IAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKC,qCACZC,iBAAiB,KCyIR8D,E,YA1IX,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KAeViB,iBAAmB,SAACC,GAChB2C,QAAQC,IAAI5C,GACZA,EAAM6C,gBACN,IAAMlC,EAAO,EAAK1B,MAAM0B,KAClBU,EAAQ,EAAKpC,MAAMoC,MACnByB,EAAS,EAAK7D,MAAM6D,OACpBC,EAAO,EAAK9D,MAAM8D,KAClBC,EAAM,EAAK/D,MAAM+D,IACjBC,EAAc,EAAKhE,MAAMgE,YACzBC,EAAQ,EAAKjE,MAAMiE,MAEzB,EAAKpF,QAAQ0E,WAAW,EAAKvD,OAGxBjB,MAAK,SAAAC,GACF0E,QAAQC,IAAI,QACZD,QAAQC,IAAI3E,GACZ,EAAKmB,SAAS,CACVuB,KAAM,GACNU,MAAO,GACPyB,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,YAAa,GACbC,MAAO,QAKd9C,OAAM,SAAAC,GACHsC,QAAQC,IAAI,SACZD,QAAQC,IAAIvC,GACZ,EAAKjB,SAAS,CACVuB,KAAMA,EACNU,MAAOA,EACPyB,OAAQA,EACRC,KAAMA,EACNC,IAAKA,EACLC,YAAaA,EACbC,MAAOA,EACP7C,OAAO,QAxDJ,EA6DnBC,aAAe,SAACN,GAAW,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA/DT,EAmEnB0C,gBAAkB,SAACnD,GACf,EAAKZ,SAAS,CACVuB,KAAMX,EAAMO,OAAOE,SArER,EAyEnB2C,iBAAmB,SAACpD,GAChB,EAAKZ,SAAS,CACViC,MAAOrB,EAAMO,OAAOE,SA3ET,EA8EnB4C,kBAAoB,SAACrD,GACjB,EAAKZ,SAAS,CACV0D,OAAQ9C,EAAMO,OAAOE,SAhFV,EAmFnB6C,gBAAkB,SAACtD,GACf,EAAKZ,SAAS,CACV2D,KAAM/C,EAAMO,OAAOE,SArFR,EAwFnB8C,eAAiB,SAACvD,GACd,EAAKZ,SAAS,CACV4D,IAAKhD,EAAMO,OAAOE,SA1FP,EA6FnB+C,uBAAyB,SAACxD,GACtB,EAAKZ,SAAS,CACV6D,YAAajD,EAAMO,OAAOE,SA/Ff,EAkGnBgD,iBAAmB,SAACzD,GAChB,EAAKZ,SAAS,CACV8D,MAAOlD,EAAMO,OAAOE,SAlGxB,EAAKxB,MAAQ,CACT0B,KAAM,GACNU,MAAO,GACPyB,OAAQ,GACRC,KAAM,GACNC,IAAK,GACLC,YAAa,GACbC,MAAO,IAIX,EAAKpF,QAAU,IAAIuE,EAbJ,E,sEAyGT,IAAD,OACL,OACI,6BACI,0BAAM3B,SAAUnC,KAAKwB,kBACjB,6DACA,wCACA,2BAAOY,KAAK,OAAOH,KAAK,OAAOC,MAAOlC,KAAKU,MAAM0B,KAAME,SAAU,SAAC7B,GAAD,OAAO,EAAKmE,gBAAgBnE,MAE7F,yCACA,2BAAO2B,KAAK,OAAOH,KAAK,QAAQC,MAAOlC,KAAKU,MAAMoC,MAAOR,SAAU,SAAC7B,GAAD,OAAO,EAAKoE,iBAAiBpE,MAEhG,0CACA,2BAAO2B,KAAK,OAAOH,KAAK,SAASC,MAAOlC,KAAKU,MAAM6D,OAAQjC,SAAU,SAAC7B,GAAD,OAAO,EAAKqE,kBAAkBrE,MAEnG,wCACA,2BAAO2B,KAAK,SAASH,KAAK,OAAOC,MAAOlC,KAAKU,MAAM8D,KAAMlC,SAAU,SAAC7B,GAAD,OAAO,EAAKsE,gBAAgBtE,MAE/F,uCACA,2BAAO2B,KAAK,OAAOH,KAAK,MAAMC,MAAOlC,KAAKU,MAAM+D,IAAKnC,SAAU,SAAC7B,GAAD,OAAO,EAAKuE,eAAevE,MAE1F,8CACA,2BAAO2B,KAAK,OAAOH,KAAK,cAAcC,MAAOlC,KAAKU,MAAMgE,YAAapC,SAAU,SAAC7B,GAAD,OAAO,EAAKwE,uBAAuBxE,MAElH,yCACA,2BAAO2B,KAAK,SAASH,KAAK,QAAQC,MAAOlC,KAAKU,MAAMiE,MAAOrC,SAAU,SAAC7B,GAAD,OAAO,EAAKyE,iBAAiBzE,MAElG,2BAAO2B,KAAK,SAASF,MAAM,iB,GApIrBuB,IAAMnC,WC0IjB6C,E,YAzIX,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KAeViB,iBAAmB,SAACC,GAChB2C,QAAQC,IAAI5C,GACZA,EAAM6C,gBACe,EAAK5D,MAAMuC,aACR,EAAKvC,MAAMyE,gBACZ,EAAKzE,MAAM0E,eACb,EAAK1E,MAAM2E,aACpB,EAAK3E,MAAM+D,IACH,EAAK/D,MAAMgE,YACjB,EAAKhE,MAAMiE,MAEzB,EAAKpF,QAAQ+F,kBAAkB,EAAK5E,OAE/BjB,MAAK,SAAAC,GACF0E,QAAQC,IAAI,QACZD,QAAQC,IAAI3E,GACZ,EAAKmB,SAAS,CACVoC,aAAc,GACdkC,gBAAiB,GACjBC,eAAgB,GAChBC,aAAc,GACdZ,IAAK,GACLC,YAAa,GACbC,MAAO,QAKd9C,OAAM,SAAAC,GACHsC,QAAQC,IAAI,SACZD,QAAQC,IAAIvC,GACZ,EAAKjB,SAAS,CACVoC,aAAc,GACdkC,gBAAiB,GACjBC,eAAgB,GAChBC,aAAc,GACdZ,IAAK,GACLC,YAAa,GACbC,MAAO,GACP7C,OAAO,QAvDJ,EA4DnBC,aAAe,SAACN,GAAW,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA9DT,EAkEnBqD,wBAA0B,SAAC9D,GACvB,EAAKZ,SAAS,CACVoC,aAAcxB,EAAMO,OAAOE,SApEhB,EAwEnBsD,2BAA6B,SAAC/D,GAC1B,EAAKZ,SAAS,CACViC,MAAOrB,EAAMO,OAAOE,SA1ET,EA6EnBuD,0BAA4B,SAAChE,GACzB,EAAKZ,SAAS,CACViC,MAAOrB,EAAMO,OAAOE,SA/ET,EAkFnBwD,wBAA0B,SAACjE,GACvB,EAAKZ,SAAS,CACV2D,KAAM/C,EAAMO,OAAOE,SApFR,EAuFnB8C,eAAiB,SAACvD,GACd,EAAKZ,SAAS,CACV4D,IAAKhD,EAAMO,OAAOE,SAzFP,EA4FnB+C,uBAAyB,SAACxD,GACtB,EAAKZ,SAAS,CACV6D,YAAajD,EAAMO,OAAOE,SA9Ff,EAiGnBgD,iBAAmB,SAACzD,GAChB,EAAKZ,SAAS,CACV8D,MAAOlD,EAAMO,OAAOE,SAjGxB,EAAKxB,MAAQ,CACTuC,aAAc,GACdkC,gBAAiB,GACjBC,eAAgB,GAChBC,aAAc,GACdZ,IAAK,GACLC,YAAa,GACbC,MAAO,IAIX,EAAKpF,QAAU,IAAIuE,EAbJ,E,sEAwGT,IAAD,OACL,OACI,6BACI,0BAAM3B,SAAUnC,KAAKwB,kBACjB,gEACA,gDACA,2BAAOY,KAAK,OAAOH,KAAK,eAAeC,MAAOlC,KAAKU,MAAMuC,aAAcX,SAAU,SAAC7B,GAAD,OAAO,EAAK8E,wBAAwB9E,MAErH,mDACA,2BAAO2B,KAAK,OAAOH,KAAK,kBAAkBC,MAAOlC,KAAKU,MAAMyE,gBAAiB7C,SAAU,SAAC7B,GAAD,OAAO,EAAK+E,2BAA2B/E,MAE9H,kDACA,2BAAO2B,KAAK,OAAOH,KAAK,iBAAiBC,MAAOlC,KAAKU,MAAM0E,eAAgB9C,SAAU,SAAC7B,GAAD,OAAO,EAAKgF,0BAA0BhF,MAE3H,gDACA,2BAAO2B,KAAK,SAASH,KAAK,eAAeC,MAAOlC,KAAKU,MAAM2E,aAAc/C,SAAU,SAAC7B,GAAD,OAAO,EAAKiF,wBAAwBjF,MAEvH,uCACA,2BAAO2B,KAAK,OAAOH,KAAK,MAAMC,MAAOlC,KAAKU,MAAM+D,IAAKnC,SAAU,SAAC7B,GAAD,OAAO,EAAKuE,eAAevE,MAE1F,8CACA,2BAAO2B,KAAK,OAAOH,KAAK,cAAcC,MAAOlC,KAAKU,MAAMgE,YAAapC,SAAU,SAAC7B,GAAD,OAAO,EAAKwE,uBAAuBxE,MAElH,yCACA,2BAAO2B,KAAK,SAASH,KAAK,QAAQC,MAAOlC,KAAKU,MAAMiE,MAAOrC,SAAU,SAAC7B,GAAD,OAAO,EAAKyE,iBAAiBzE,MAElG,2BAAO2B,KAAK,SAASF,MAAM,iB,GAnIrBuB,IAAMnC,WCuIjBqE,E,YA3Hb,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KA2BR4C,WAAa,WACX,EAAK5D,QAAQwE,WACZtE,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZ4B,MAAO/C,QAhCM,EAqCnBiE,cAAgB,WACd,EAAKpE,QAAQyE,cACZvE,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZkC,SAAUrD,QAzCG,EA+CnBiC,QAAU,SAAAiE,GACR,EAAK/E,SAAS,CACZF,aAAciF,KAjDC,EAqDnB7F,OAAS,WACP,EAAK8F,YAAY9F,SAASN,MAAK,WAC7B,EAAKoB,SAAS,CAAEF,aAAc,WArDhC,EAAKD,MAAQ,CACXC,aAAc,KACd8B,MAAO,GACPM,SAAU,IAEZ,EAAKxD,QAAU,IAAIuE,EACnB,EAAK+B,YAAc,IAAI1G,EACvB,EAAK2G,YATY,E,iFAYE,IAAD,OAClB1B,QAAQC,IAAIrE,KAAKU,MAAMC,cACvBX,KAAKmD,aAKLnD,KAAKT,QAAQyE,cACZvE,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZkC,SAAUrD,S,kCAqCH,IAAD,OACV,OAAOM,KAAK6F,YACXhG,WACEJ,MAAK,SAAAC,GACJ,EAAKmB,SAAS,CACZF,aAAcjB,IACb,kBAAM0E,QAAQC,IAAI,EAAK3D,aAE3BmB,OAAM,SAAAkE,GACL,EAAKlF,SAAS,CACZF,cAAc,S,+BAKZ,IAAD,OACP,OAAIX,KAAKU,MAAMC,aAEX,kBAAC,IAAMqF,SAAP,KAEE,yBAAKlF,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAQmF,cAAejG,KAAKU,MAAMC,aAAcZ,OAAQC,KAAKD,UAE/D,8BAEE,kBAAC,IAAD,SACG,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAI,kBAAC,EAAD,CAAMrD,SAAU,EAAKrC,MAAMqC,SAAUN,MAAO,EAAK/B,MAAM+B,WAC1F,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAI,kBAAC,EAAD,CAAMrD,SAAU,EAAKrC,MAAMqC,SAAUN,MAAO,EAAK/B,MAAM+B,WAC7F,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAI,kBAACC,EAAD,SACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAI,kBAAC,EAAD,SAC7C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAC7F,GAAD,OAAU,kBAAC,EAAD,eAAY4C,WAAY,EAAKA,WAAYC,SAAU,EAAK1C,MAAM+B,OAAWlC,OACzH,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,eAAeC,OAAQ,SAAC7F,GAAD,OAAU,kBAAC,EAAD,eAAiBoD,cAAe,EAAKA,cAAeC,YAAa,EAAKlD,MAAMqC,UAAcxC,WAQrJ,kBAAC,IAAMyF,SAAP,KAGE,yBAAKlF,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAQmF,cAAejG,KAAKU,MAAMC,aAAcZ,OAAQC,KAAKD,UAE/D,8BACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAI,kBAAC,EAAD,CAAMrD,SAAU,EAAKrC,MAAMqC,SAAUN,MAAO,EAAK/B,MAAM+B,WAC7F,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,CAAOzE,QAAS,EAAKA,aAC9D,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,CAAQzE,QAAS,EAAKA,cAElE,kBAAC,EAAD,a,GAlHIL,aCHEgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DCXNoD,IAASN,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBO,SAASC,eAAe,SD4H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtH,MAAK,SAAAuH,GACJA,EAAaC,gBAEdpF,OAAM,SAAAC,GACLsC,QAAQtC,MAAMA,EAAMoF,c","file":"static/js/main.6d1ef7c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff02283c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.f3bf9747.png\";","// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport AuthService from \"../../services/AuthService\";\nimport \"./Navbar.scss\"\nimport logo from \"../navbar/logo.png\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"menu\">\n          <div>\n            <img src={logo} alt=\"\" width=\"80\" heith=\"85\" />\n          </div>\n          <div className=\"one\">\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/home\">Home</Link>\n            </div>\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/addGame\">AddGame</Link>\n            </div>\n            <div className=\"two\">\n              <Link className=\"linav\" to=\"/addConsoles\">AddConsoles</Link>\n            </div>\n            <div className=\"two\">\n              <a onClick={this.handleLogout}>Logout</a>\n            </div>\n          </div>\n        </nav>\n     \n      );\n\n    } else {\n      return (\n        <div>\n          <nav className=\"menu\">\n            <div>\n              <img src={logo} alt=\"\" width=\"80\" heith=\"85\" />\n            </div>\n            <div className=\"one\">\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/login\">Login</Link>\n              </div>\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/signup\">Signup</Link>\n              </div>\n              <div className=\"two\">\n                <Link className=\"linav\" to=\"/home\">Home</Link>\n              </div>\n\n            </div>\n\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../services/AuthService'\nimport { Link } from 'react-router-dom';\nimport \"./Login.scss\"\n\n\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n\n  render() {\n    return (<div>\n      <h3 className=\"titleOne\">Signup</h3>\n\n      <div className=\"login\">\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className=\"user\"></label>\n            <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n            <label className=\"password\"></label>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n          </fieldset>\n\n\n          <div className=\"botton\">\n            <input type=\"submit\" value=\"Sign up\" />\n          </div>\n\n        </form>\n      </div>\n\n      <div>\n        <nav className=\"link\">\n          <Link to=\"/login\">do you have an account? login</Link>\n        </nav>\n      </div>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>\n\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService'; \nimport \"./Login.scss\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3 className=\"titleOne\">login</h3>\n\n      <div className=\"login\">\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n       <label className=\"user\"></label>\n          <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label className=\"password\"></label>\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n\n       <div className=\"botton\">\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n       \n        </form>\n\n       </div>\n\n       <div>\n        <nav className=\"link\">\n              <Link to=\"/signup\">You still don't have an account: Signup</Link>\n        </nav>\n      </div>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from \"react-router-dom\"\nimport logo from \"../navbar/logo_transparent.png\";\nimport \"./Home.scss\"\n\n\nfunction Home(props) {\n\n    return (\n        \n          <div>\n            <header className=\"logo\">\n            <img src={logo} alt=\"\" width=\"500\" heith=\"300\"/>\n            </header>\n\n        {/* SECTION GAMES */}\n        <div className=\"all\">\n        <div className=\"games\">\n          <h3>Our best offers Games:</h3>\n          {props.games.map(game => (\n            <Link to={\"game/\"+game._id}>\n              <div>\n                  <img src={game.photo} alt=\"\"/>\n                  <h2>{game.title}</h2>\n              </div>\n            </Link>\n          ))}\n        </div>\n      \n\n      {/* SECTION CONSOLES */}\n      \n      <div className=\"consoles\" >\n        <h3>Our best deals on consoles:</h3>\n          {props.consoles.map(consol => (\n              <Link to={\"console/\"+consol._id}>\n                <div>\n                  <img src={consol.photo} alt=\"\"/>\n                  <h2>{consol.consoleModel}</h2>\n              </div>\n              </Link>\n          ))}\n        </div>\n      </div>\n     \n     \n      </div>\n\n    )\n}\n\nexport default Home;\n\n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nclass GameDetail extends React.Component {\n    constructor(props) {\n        super(props);\n    }   \n\n    componentDidMount() {\n        return this.props.fetchGames()\n    }\n\n    // Annadir redireccion a login\n    render () {\n        return (\n            <div>\n            {this.props.allGames\n            .filter(game => game._id === this.props.match.params.id)\n            .map(game => (\n                game.title\n                \n\n            )\n\n            \n            )}\n            </div>\n        )\n    }\n\n}\n\nexport default GameDetail","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nclass ConsolesDetails extends React.Component {\n    constructor(props) {\n        super(props);\n    }   \n\n    componentDidMount() {\n        return this.props.fetchConsoles()\n    }\n\n    // Annadir redireccion a login\n    render () {\n        return (\n            <div>\n            {this.props.allConsoles\n            .filter(consoles => consoles._id === this.props.match.params.id)\n            .map(consoles => (\n                consoles.consoleModel\n\n            )\n\n            \n            )}\n            </div>\n        )\n    }\n\n}\n\nexport default ConsolesDetails","import React from 'react';\nimport \"./Footer.scss\"\n\n\nfunction Footer() {\n    return (\n        <footer>\n        <h5>created by luci@no sanchez for ironhack</h5>\n      </footer>\n     \n    )\n}\n\n\nexport default Footer;","import axios from 'axios';\n\nclass Service {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true\n    });\n  }\n\n  getGames = () => {\n    return this.service.get(\"/games\")\n      .then(response => response.data)\n  }\n\n  getConsoles = () => {\n    return this.service.get(\"/consoles\")\n      .then(response => response.data)\n  }\n\n  getAddGame = () => {\n    return this.service.get(\"/addGame\")\n    .then(response => response.data)\n  }\n\n  getAddConsoles = () => {\n    return this.service.get(\"/addCosoles\")\n    .then(response => response.data)\n  }\n}\n\nexport default Service;","import React from 'react';\nimport Service from '../../services/Service';\n\n\nclass AddConsoles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: \"\",\n            title: \"\",\n            gender: \"\",\n            year: \"\",\n            img: \"\",\n            description: \"\",\n            price: \"\",\n\n        };\n\n        this.service = new Service();\n    }\n\n    handleFormSubmit = (event) => {\n        console.log(event)\n        event.prevetDefault();\n        const type = this.state.type;\n        const title = this.state.title;\n        const gender = this.state.gender;\n        const year = this.state.year;\n        const img = this.state.img;\n        const description = this.state.description;\n        const price = this.state.price;\n\n        this.service.getAddGame(this.state)\n\n\n            .then(response => {\n                console.log('then')\n                console.log(response)\n                this.setState({\n                    type: \"\",\n                    title: \"\",\n                    gender: \"\",\n                    year: \"\",\n                    img: \"\",\n                    description: \"\",\n                    price: \"\",\n\n                })\n            })\n\n            .catch(error => {\n                console.log('catch')\n                console.log(error)\n                this.setState({\n                    type: type,\n                    title: title,\n                    gender: gender,\n                    year: year,\n                    img: img,\n                    description: description,\n                    price: price,\n                    error: true\n                })\n            })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    handleTypeInput = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n    }\n\n    handleTitleInput = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleGenderInput = (event) => {\n        this.setState({\n            gender: event.target.value\n        })\n    }\n    handleYearInput = (event) => {\n        this.setState({\n            year: event.target.value\n        })\n    }\n    handleImgInput = (event) => {\n        this.setState({\n            img: event.target.value\n        })\n    }\n    handleDescriptionInput = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n    handlePriceInput = (event) => {\n        this.setState({\n            price: event.target.value\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <h5>add the game you want to sell</h5>\n                    <label>Type:</label>\n                    <input type=\"text\" name=\"type\" value={this.state.type} onChange={(e) => this.handleTypeInput(e)} />\n\n                    <label>Title:</label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={(e) => this.handleTitleInput(e)} />\n\n                    <label>Gender:</label>\n                    <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={(e) => this.handleGenderInput(e)} />\n\n                    <label>Year:</label>\n                    <input type=\"number\" name=\"year\" value={this.state.year} onChange={(e) => this.handleYearInput(e)} />\n\n                    <label>img:</label>\n                    <input type=\"file\" name=\"img\" value={this.state.img} onChange={(e) => this.handleImgInput(e)} />\n\n                    <label>Desription:</label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={(e) => this.handleDescriptionInput(e)} />\n\n                    <label>Price:</label>\n                    <input type=\"number\" name=\"price\" value={this.state.price} onChange={(e) => this.handlePriceInput(e)} />\n\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddConsoles;","import React from 'react';\nimport Service from '../../services/Service';\n\n\nclass AddConsoles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            consoleModel: \"\",\n            controlIncluded: \"\",\n            memoryCapacity: \"\",\n            gameIncluded: \"\",\n            img: \"\",\n            description: \"\",\n            price: \"\",\n\n        };\n\n        this.service = new Service();\n    }\n\n    handleFormSubmit = (event) => {\n        console.log(event)\n        event.prevetDefault();\n        const consoleModel = this.state.consoleModel;\n        const controlIncluded = this.state.controlIncluded;\n        const memoryCapacity = this.state.memoryCapacity;\n        const gameIncluded = this.state.gameIncluded;\n        const img = this.state.img;\n        const description = this.state.description;\n        const price = this.state.price;\n\n        this.service.getNewAddConsoles(this.state)\n\n            .then(response => {\n                console.log('then')\n                console.log(response)\n                this.setState({\n                    consoleModel: \"\",\n                    controlIncluded: \"\",\n                    memoryCapacity: \"\",\n                    gameIncluded: \"\",\n                    img: \"\",\n                    description: \"\",\n                    price: \"\",\n\n                })\n            })\n\n            .catch(error => {\n                console.log('catch')\n                console.log(error)\n                this.setState({\n                    consoleModel: \"\",\n                    controlIncluded: \"\",\n                    memoryCapacity: \"\",\n                    gameIncluded: \"\",\n                    img: \"\",\n                    description: \"\",\n                    price: \"\",\n                    error: true\n                })\n            })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n\n    handleConsoleModelInput = (event) => {\n        this.setState({\n            consoleModel: event.target.value\n        })\n    }\n\n    handleControlIncludedInput = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleMemoryCapacityInput = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleGameIncludedInput = (event) => {\n        this.setState({\n            year: event.target.value\n        })\n    }\n    handleImgInput = (event) => {\n        this.setState({\n            img: event.target.value\n        })\n    }\n    handleDescriptionInput = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n    handlePriceInput = (event) => {\n        this.setState({\n            price: event.target.value\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <h5>add the console you want to sell</h5>\n                    <label>ConsoleModel:</label>\n                    <input type=\"text\" name=\"consoleModel\" value={this.state.consoleModel} onChange={(e) => this.handleConsoleModelInput(e)} />\n\n                    <label>ControlIncluded:</label>\n                    <input type=\"text\" name=\"controlIncluded\" value={this.state.controlIncluded} onChange={(e) => this.handleControlIncludedInput(e)} />\n\n                    <label>MemoryCapacity:</label>\n                    <input type=\"text\" name=\"memoryCapacity\" value={this.state.memoryCapacity} onChange={(e) => this.handleMemoryCapacityInput(e)} />\n\n                    <label>GameIncluded:</label>\n                    <input type=\"number\" name=\"gameIncluded\" value={this.state.gameIncluded} onChange={(e) => this.handleGameIncludedInput(e)} />\n\n                    <label>img:</label>\n                    <input type=\"file\" name=\"img\" value={this.state.img} onChange={(e) => this.handleImgInput(e)} />\n\n                    <label>Desription:</label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={(e) => this.handleDescriptionInput(e)} />\n\n                    <label>Price:</label>\n                    <input type=\"number\" name=\"price\" value={this.state.price} onChange={(e) => this.handlePriceInput(e)} />\n\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddConsoles;\n\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link} from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from './components/Home/Home';\nimport GameDetail from \"./components/Home/GameDetail\";\nimport ConsolesDetails from \"./components/Home/ConsolesDetails\";\nimport Footer from \"./components/footer/Footer\";\nimport Service from './services/Service';\nimport AuthService from \"./services/AuthService\";\nimport AddGame from \"./components/addGame/AddGame\";\nimport AddConsoles from \"./components/addConsoles/AddConsoles\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      loggedInUser: null,\n      games: [],\n      consoles: []\n    };\n    this.service = new Service()\n    this.authService = new AuthService();\n    this.fetchUser();\n  }\n\n  componentDidMount() {\n    console.log(this.state.loggedInUser)\n    this.fetchGames();\n    //this.fetchConsoles();\n\n    // fetchConsoles = () => {\n    // console.log(\"esto es Consoles\")\n    this.service.getConsoles()\n    .then(response => {\n      this.setState({\n        consoles: response\n      })\n\n    })\n  }\n\n  fetchGames = () => {\n    this.service.getGames()\n    .then(response => {\n      this.setState({\n        games: response\n      })\n    })\n  }\n\n  fetchConsoles = () => {\n    this.service.getConsoles()\n    .then(response => {\n      this.setState({\n        consoles: response\n      })\n    })\n  }\n \n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.authService.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.authService\n    .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        }, () => console.log(this.state));\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header> \n            <main>\n              \n              <Switch>\n                /<Route exact path=\"/\" render={()=><Home consoles={this.state.consoles} games={this.state.games} ></Home>} /> \n                <Route exact path=\"/home\" render={()=><Home consoles={this.state.consoles} games={this.state.games} ></Home>} /> \n                <Route exact path=\"/addGame\" render={()=><AddGame></AddGame>} />  \n                <Route exact path=\"/addConsoles\" render={()=><AddConsoles></AddConsoles>} />            \n                <Route exact path=\"/game/:id\" render={(props) =><GameDetail fetchGames={this.fetchGames} allGames={this.state.games} {...props}></GameDetail>} />\n                <Route exact path=\"/console/:id\" render={(props) =><ConsolesDetails fetchConsoles={this.fetchConsoles} allConsoles={this.state.consoles} {...props}></ConsolesDetails>} />\n              </Switch> \n            </main>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          {/* <Redirect to=\"/\" /> */}\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header>\n            <main>\n              <Switch>\n  \n                <Route exact path=\"/home\" render={()=><Home consoles={this.state.consoles} games={this.state.games}></Home>} />              \n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n              </Switch>\n              <Footer/>\n            </main>\n           \n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}