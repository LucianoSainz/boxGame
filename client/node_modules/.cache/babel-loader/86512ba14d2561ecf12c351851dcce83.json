{"ast":null,"code":"var _jsxFileName = \"/home/luciano/boxGame/client/src/components/auth/Signup.js\";\n// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '/Service/AuthService';\nimport { Link } from 'react-router-dom'; //signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const username = this.state.username;\n      const password = this.state.password; //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n\n      this.service.signup(username, password).then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        }); //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n\n        this.props.getUser(response.user);\n      }).catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.service = new AuthService();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Sign up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"nav-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"do you have an account? login\"))))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.error ? 'Error' : ''));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/components/auth/Signup.js"],"names":["React","Component","AuthService","Link","Signup","constructor","props","handleFormSubmit","event","preventDefault","username","state","password","service","signup","then","response","setState","getUser","user","catch","error","handleChange","name","value","target","render","e"],"mappings":"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","sourcesContent":["// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '/Service/AuthService'\nimport { Link } from 'react-router-dom';\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Signup</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        {/* aqui va lo de que haga login si tiene cuenta */}\n        <div>\n     <nav className=\"nav-style\">\n       <ul>\n         <li>\n           <Link to=\"/login\">do you have an account? login</Link>\n         </li>\n         </ul>\n         </nav>\n         </div>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}