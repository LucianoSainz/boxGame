{"ast":null,"code":"import _defineProperty from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/inherits\";// auth/Signup.js\nimport React,{Component}from'react';import AuthService from'./AuthService';import{Link}from'react-router-dom';//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nvar Signup=/*#__PURE__*/function(_Component){_inherits(Signup,_Component);function Signup(props){var _this;_classCallCheck(this,Signup);_this=_possibleConstructorReturn(this,_getPrototypeOf(Signup).call(this,props));_this.handleFormSubmit=function(event){event.preventDefault();var username=_this.state.username;var password=_this.state.password;//aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n_this.service.signup(username,password).then(function(response){_this.setState({username:\"\",password:\"\"});//aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n//por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n//y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n_this.props.getUser(response.user);}).catch(function(error){_this.setState({username:username,password:password,error:true});});};_this.handleChange=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};_this.state={username:'',password:''};_this.service=new AuthService();return _this;}_createClass(Signup,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"h3\",null,\"Signup\"),React.createElement(\"form\",{onSubmit:this.handleFormSubmit},React.createElement(\"fieldset\",null,React.createElement(\"label\",null,\"Username:\"),React.createElement(\"input\",{type:\"text\",name:\"username\",value:this.state.username,onChange:function onChange(e){return _this2.handleChange(e);}})),React.createElement(\"fieldset\",null,React.createElement(\"label\",null,\"Password:\"),React.createElement(\"input\",{type:\"password\",name:\"password\",value:this.state.password,onChange:function onChange(e){return _this2.handleChange(e);}})),React.createElement(\"input\",{type:\"submit\",value:\"Sign up\"})),React.createElement(\"div\",null,React.createElement(\"nav\",{className:\"nav-style\"},React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(Link,{to:\"/login\"},\"do you have an account? login\"))))),React.createElement(\"h1\",null,this.state.error?'Error':''));}}]);return Signup;}(Component);export default Signup;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/components/auth/Signup.js"],"names":["React","Component","AuthService","Link","Signup","props","handleFormSubmit","event","preventDefault","username","state","password","service","signup","then","response","setState","getUser","user","catch","error","handleChange","target","name","value","e"],"mappings":"0qBAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA;AACA;GACMC,CAAAA,M,gEACJ,gBAAYC,KAAZ,CAAkB,wCAChB,wEAAMA,KAAN,GADgB,MAMlBC,gBANkB,CAMC,SAACC,KAAD,CAAW,CAC5BA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,QAAQ,CAAG,MAAKC,KAAL,CAAWD,QAA5B,CACA,GAAME,CAAAA,QAAQ,CAAG,MAAKD,KAAL,CAAWC,QAA5B,CAEA;AACA,MAAKC,OAAL,CAAaC,MAAb,CAAoBJ,QAApB,CAA8BE,QAA9B,EACCG,IADD,CACO,SAAAC,QAAQ,CAAI,CACf,MAAKC,QAAL,CAAc,CACVP,QAAQ,CAAE,EADA,CAEVE,QAAQ,CAAE,EAFA,CAAd,EAIA;AACA;AACA;AACA,MAAKN,KAAL,CAAWY,OAAX,CAAmBF,QAAQ,CAACG,IAA5B,EACH,CAVD,EAWCC,KAXD,CAWO,SAAAC,KAAK,CAAI,CACd,MAAKJ,QAAL,CAAc,CACZP,QAAQ,CAAEA,QADE,CAEZE,QAAQ,CAAEA,QAFE,CAGZS,KAAK,CAAE,IAHK,CAAd,EAKD,CAjBD,EAkBD,CA9BiB,OAgClBC,YAhCkB,CAgCH,SAACd,KAAD,CAAW,mBACFA,KAAK,CAACe,MADJ,CACjBC,IADiB,eACjBA,IADiB,CACXC,KADW,eACXA,KADW,CAExB,MAAKR,QAAL,oBAAgBO,IAAhB,CAAuBC,KAAvB,GACD,CAnCiB,CAEhB,MAAKd,KAAL,CAAa,CAAED,QAAQ,CAAE,EAAZ,CAAgBE,QAAQ,CAAE,EAA1B,CAAb,CACA,MAAKC,OAAL,CAAe,GAAIV,CAAAA,WAAJ,EAAf,CAHgB,aAIjB,C,0DAkCQ,iBACP,MACE,gCACE,uCADF,CAGE,4BAAM,QAAQ,CAAE,KAAKI,gBAArB,EACE,oCACE,6CADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,UAAxB,CAAmC,KAAK,CAAE,KAAKI,KAAL,CAAWD,QAArD,CAA+D,QAAQ,CAAG,kBAAAgB,CAAC,QAAI,CAAA,MAAI,CAACJ,YAAL,CAAkBI,CAAlB,CAAJ,EAA3E,EAFF,CADF,CAME,oCACE,6CADF,CAEE,6BAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAC,UAA5B,CAAuC,KAAK,CAAE,KAAKf,KAAL,CAAWC,QAAzD,CAAmE,QAAQ,CAAG,kBAAAc,CAAC,QAAI,CAAA,MAAI,CAACJ,YAAL,CAAkBI,CAAlB,CAAJ,EAA/E,EAFF,CANF,CAWE,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,SAA3B,EAXF,CAHF,CAkBE,+BACH,2BAAK,SAAS,CAAC,WAAf,EACE,8BACE,8BACE,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,kCADF,CADF,CADF,CADG,CAlBF,CA4BE,8BAAK,KAAKf,KAAL,CAAWU,KAAX,CAAmB,OAAnB,CAA6B,EAAlC,CA5BF,CADF,CAgCD,C,oBAxEkBnB,S,EA2ErB,cAAeG,CAAAA,MAAf","sourcesContent":["// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\nimport { Link } from 'react-router-dom';\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Signup</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        {/* aqui va lo de que haga login si tiene cuenta */}\n        <div>\n     <nav className=\"nav-style\">\n       <ul>\n         <li>\n           <Link to=\"/login\">do you have an account? login</Link>\n         </li>\n         </ul>\n         </nav>\n         </div>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}