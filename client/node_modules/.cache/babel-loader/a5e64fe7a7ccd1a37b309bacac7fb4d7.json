{"ast":null,"code":"var _jsxFileName = \"/home/luciano/boxGame/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // import ProjectList from './components/projects/ProjectList';\n\nimport Navbar from \"./components/navbar/Navbar\"; // import ProjectDetails from './components/projects/ProjectDetails';\n\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\"; //App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\n\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props); //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n\n    this.getUser = userObj => {\n      this.setState({\n        loggedInUser: userObj\n      });\n    };\n\n    this.logout = () => {\n      this.service.logout().then(() => {\n        this.setState({\n          loggedInUser: null\n        });\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n    this.fetchUser();\n  }\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service.loggedin().then(response => {\n      this.setState({\n        loggedInUser: response\n      });\n    }).catch(err => {\n      this.setState({\n        loggedInUser: false\n      });\n    });\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        userInSession: this.state.loggedInUser,\n        logout: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Contents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))));\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        userInSession: this.state.loggedInUser,\n        logout: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: () => React.createElement(Signup, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: () => React.createElement(Login, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Navbar","Signup","Login","AuthService","Contents","App","constructor","props","getUser","userObj","setState","loggedInUser","logout","service","then","state","fetchUser","loggedin","response","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              {/* aqui simplemente se muestra un lorem ipsum genérico para que veáis contenidos que solo se muestran a usuarios logeados */}\n              <Contents />\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}