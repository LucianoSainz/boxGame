{"ast":null,"code":"import _classCallCheck from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/luciano/boxGame/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./App.css\";import{Switch,Route,Redirect}from\"react-router-dom\";// import ProjectList from './components/projects/ProjectList';\nimport Navbar from\"./components/navbar/Navbar\";// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from\"./components/auth/Signup\";import Login from\"./components/auth/Login\";import AuthService from\"./components/auth/AuthService\";import Contents from\"./components/contents/Contents\";//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);//en el tiempo de construcción de la aplicación, creamos una instancia del authservice\nfunction App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));//arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n_this.getUser=function(userObj){_this.setState({loggedInUser:userObj});};_this.logout=function(){_this.service.logout().then(function(){_this.setState({loggedInUser:null});});};_this.state={loggedInUser:null};_this.service=new AuthService();_this.fetchUser();return _this;}_createClass(App,[{key:\"fetchUser\",//este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\nvalue:function fetchUser(){var _this2=this;return this.service.loggedin().then(function(response){_this2.setState({loggedInUser:response});}).catch(function(err){_this2.setState({loggedInUser:false});});}},{key:\"render\",value:function render(){var _this3=this;//aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\nif(this.state.loggedInUser){//en este caso mostramos los contenidos ya que hay usuario\nreturn React.createElement(React.Fragment,null,React.createElement(Redirect,{to:\"/home\"}),React.createElement(\"div\",{className:\"App\"},React.createElement(\"header\",{className:\"App-header\"},React.createElement(Navbar,{userInSession:this.state.loggedInUser,logout:this.logout}),React.createElement(Contents,null))));}else{//si no estás logeado, mostrar opcionalmente o login o signup\nreturn React.createElement(React.Fragment,null,React.createElement(Redirect,{to:\"/login\"}),React.createElement(\"div\",{className:\"App\"},React.createElement(\"header\",{className:\"App-header\"},React.createElement(Navbar,{userInSession:this.state.loggedInUser,logout:this.logout}),React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/signup\",render:function render(){return React.createElement(Signup,{getUser:_this3.getUser});}}),React.createElement(Route,{exact:true,path:\"/login\",render:function render(){return React.createElement(Login,{getUser:_this3.getUser});}})))));}}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Navbar","Signup","Login","AuthService","Contents","App","props","getUser","userObj","setState","loggedInUser","logout","service","then","state","fetchUser","loggedin","response","catch","err"],"mappings":"yjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CAEA;GACMC,CAAAA,G,6DACJ;AACA,aAAYC,KAAZ,CAAmB,qCACjB,qEAAMA,KAAN,GACA;AAFiB,MASnBC,OATmB,CAST,SAAAC,OAAO,CAAI,CACnB,MAAKC,QAAL,CAAc,CACZC,YAAY,CAAEF,OADF,CAAd,EAGD,CAbkB,OAenBG,MAfmB,CAeV,UAAM,CACb,MAAKC,OAAL,CAAaD,MAAb,GAAsBE,IAAtB,CAA2B,UAAM,CAC/B,MAAKJ,QAAL,CAAc,CAAEC,YAAY,CAAE,IAAhB,CAAd,EACD,CAFD,EAGD,CAnBkB,CAGjB,MAAKI,KAAL,CAAa,CAAEJ,YAAY,CAAE,IAAhB,CAAb,CACA,MAAKE,OAAL,CAAe,GAAIT,CAAAA,WAAJ,EAAf,CAEA,MAAKY,SAAL,GANiB,aAOlB,C,mCAcD;0BACY,iBACV,MAAO,MAAKH,OAAL,CACJI,QADI,GAEJH,IAFI,CAEC,SAAAI,QAAQ,CAAI,CAChB,MAAI,CAACR,QAAL,CAAc,CACZC,YAAY,CAAEO,QADF,CAAd,EAGD,CANI,EAOJC,KAPI,CAOE,SAAAC,GAAG,CAAI,CACZ,MAAI,CAACV,QAAL,CAAc,CACZC,YAAY,CAAE,KADF,CAAd,EAGD,CAXI,CAAP,CAYD,C,uCAEQ,iBACP;AACA,GAAI,KAAKI,KAAL,CAAWJ,YAAf,CAA6B,CAC3B;AACA,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,oBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EADF,CAGE,2BAAK,SAAS,CAAC,KAAf,EACE,8BAAQ,SAAS,CAAC,YAAlB,EACE,oBAAC,MAAD,EAAQ,aAAa,CAAE,KAAKI,KAAL,CAAWJ,YAAlC,CAAgD,MAAM,CAAE,KAAKC,MAA7D,EADF,CAGE,oBAAC,QAAD,MAHF,CADF,CAHF,CADF,CAaD,CAfD,IAeO,CACL;AACA,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADF,CAGE,2BAAK,SAAS,CAAC,KAAf,EACE,8BAAQ,SAAS,CAAC,YAAlB,EACE,oBAAC,MAAD,EAAQ,aAAa,CAAE,KAAKG,KAAL,CAAWJ,YAAlC,CAAgD,MAAM,CAAE,KAAKC,MAA7D,EADF,CAEE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,MAAM,CAAE,wBAAM,qBAAC,MAAD,EAAQ,OAAO,CAAE,MAAI,CAACJ,OAAtB,EAAN,EAApC,EADF,CAEE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,MAAM,CAAE,wBAAM,qBAAC,KAAD,EAAO,OAAO,CAAE,MAAI,CAACA,OAArB,EAAN,EAAnC,EAFF,CAFF,CADF,CAHF,CADF,CAeD,CACF,C,iBA1EeX,S,EA6ElB,cAAeS,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              {/* aqui simplemente se muestra un lorem ipsum genérico para que veáis contenidos que solo se muestran a usuarios logeados */}\n              <Contents />\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}