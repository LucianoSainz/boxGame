{"ast":null,"code":"var _jsxFileName = \"/home/luciano/boxGame/client/src/components/addConsoles/AddConsoles.js\";\nimport React from 'react';\nimport Service from '../../services/Service';\n\nclass AddConsoles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.service.addConsoles(this.state, this.props.user._id).then(response => {\n        this.setState({\n          consoleModel: \"\",\n          controlIncluded: \"\",\n          memoryCapacity: \"\",\n          gameIncluded: \"\",\n          imageUrl: \"\",\n          description: \"\",\n          price: \"\"\n        }, () => this.props.history.push('/home'));\n      }).catch(error => {\n        console.log('catch');\n        console.log(error);\n      });\n    };\n\n    this.handleConsoleModelInput = event => {\n      this.setState({\n        consoleModel: event.target.value\n      });\n    };\n\n    this.handleControlIncludedInput = event => {\n      this.setState({\n        controlIncluded: event.target.value\n      });\n    };\n\n    this.handleMemoryCapacityInput = event => {\n      this.setState({\n        memoryCapacity: event.target.value\n      });\n    };\n\n    this.handleGameIncludedInput = event => {\n      this.setState({\n        gameIncluded: event.target.value\n      });\n    };\n\n    this.handleFileUpload = e => {\n      console.log(\"The file to be uploaded is: \", e.target.files[0]);\n      const uploadDatas = new FormData();\n      uploadData.append(\"imageUrl\", e.target.files[0]);\n      this.service.handleUploadConsoles(uploadDatas).then(response => {\n        console.log(response);\n        this.setState({\n          imageUrl: response.secure_url\n        }, () => console.log(this.state));\n      }).catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n    };\n\n    this.handleDescriptionInput = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.handlePriceInput = event => {\n      this.setState({\n        price: event.target.value\n      });\n    };\n\n    this.state = {\n      consoleModel: \"\",\n      controlIncluded: \"\",\n      memoryCapacity: \"\",\n      gameIncluded: \"\",\n      imageUrl: \"\",\n      description: \"\",\n      price: \"\"\n    };\n    this.service = new Service();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"add the console you want to sell\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"ConsoleModel:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"consoleModel\",\n      value: this.state.consoleModel,\n      onChange: e => this.handleConsoleModelInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"ControlIncluded:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"controlIncluded\",\n      value: this.state.controlIncluded,\n      onChange: e => this.handleControlIncludedInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"MemoryCapacity:\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"MemoryCapacity\",\n      value: this.state.memoryCapacity,\n      onChange: e => this.handleMemoryCapacityInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"GameIncluded:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"GameIncluded\",\n      value: this.state.gameIncluded,\n      onChange: e => this.handleGameIncludedInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Image:\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"imageUrl\",\n      onChange: e => this.handleFileUpload(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Desription:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: e => this.handleDescriptionInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Price:\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: e => this.handlePriceInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AddConsoles;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/components/addConsoles/AddConsoles.js"],"names":["React","Service","AddConsoles","Component","constructor","props","handleFormSubmit","event","preventDefault","service","addConsoles","state","user","_id","then","response","setState","consoleModel","controlIncluded","memoryCapacity","gameIncluded","imageUrl","description","price","history","push","catch","error","console","log","handleConsoleModelInput","target","value","handleControlIncludedInput","handleMemoryCapacityInput","handleGameIncludedInput","handleFileUpload","e","files","uploadDatas","FormData","uploadData","append","handleUploadConsoles","secure_url","err","handleDescriptionInput","handlePriceInput","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Service from '../../services/Service';\n\n\nclass AddConsoles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            consoleModel: \"\",\n            controlIncluded: \"\",\n            memoryCapacity: \"\",\n            gameIncluded: \"\",\n            imageUrl: \"\",\n            description: \"\",\n            price: \"\",\n\n        };\n        this.service = new Service();\n    }\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        this.service.addConsoles(this.state, this.props.user._id)\n            .then(response => {\n                this.setState({\n                    consoleModel: \"\",\n                    controlIncluded: \"\",\n                    memoryCapacity: \"\",\n                    gameIncluded: \"\",\n                    imageUrl: \"\",\n                    description: \"\",\n                    price: \"\",\n                }, () => this.props.history.push('/home'))\n            })\n            .catch(error => {\n                console.log('catch')\n                console.log(error)\n            })\n    };\n\n\n    // handleChange = (event) => {\n    //     const { name, value } = event.target;\n    //     this.setState({ [name]: value });\n    // }\n\n\n    handleConsoleModelInput = (event) => {\n        this.setState({\n            consoleModel: event.target.value\n        })\n    }\n\n    handleControlIncludedInput = (event) => {\n        this.setState({\n            controlIncluded: event.target.value\n        })\n    }\n    handleMemoryCapacityInput = (event) => {\n        this.setState({\n            memoryCapacity: event.target.value\n        })\n    }\n    handleGameIncludedInput = (event) => {\n        this.setState({\n            gameIncluded: event.target.value\n        })\n    }\n\n\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n        const uploadDatas = new FormData();\n\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n        this.service.handleUploadConsoles(uploadDatas)\n            .then(response => {\n                console.log(response)\n                this.setState({ imageUrl: response.secure_url }, () => console.log(this.state));\n            })\n            .catch(err => {\n                console.log(\"Error while uploading the file: \", err);\n            });\n    }\n\n    handleDescriptionInput = (event) => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n    handlePriceInput = (event) => {\n        this.setState({\n            price: event.target.value\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <h5>add the console you want to sell</h5>\n                    <label>ConsoleModel:</label>\n                    <input\n                        type='text'\n                        name='consoleModel'\n                        value={this.state.consoleModel}\n                        onChange={(e) => this.handleConsoleModelInput(e)}\n                    />\n                    <label>ControlIncluded:</label>\n                    <input\n                        type='text'\n                        name='controlIncluded'\n                        value={this.state.controlIncluded}\n                        onChange={(e) => this.handleControlIncludedInput(e)}\n                    />\n                    <label>MemoryCapacity:</label>\n                    <input\n                        type='number'\n                        name='MemoryCapacity'\n                        value={this.state.memoryCapacity}\n                        onChange={e => this.handleMemoryCapacityInput(e)}\n                    />\n                    <label>GameIncluded:</label>\n                    <input\n                        type='text'\n                        name='GameIncluded'\n                        value={this.state.gameIncluded}\n                        onChange={e => this.handleGameIncludedInput(e)}\n                    />\n                    <label>Image:</label>\n                    <input\n                        type=\"file\"\n                        name=\"imageUrl\"\n                        onChange={e => this.handleFileUpload(e)}\n                    />\n                    <label>Desription:</label>\n                    <input\n                        type=\"text\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={e => this.handleDescriptionInput(e)}\n                    />\n                    <label>Price:</label>\n                    <input\n                        type=\"number\"\n                        name=\"price\"\n                        value={this.state.price}\n                        onChange={e => this.handlePriceInput(e)}\n                    />\n\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddConsoles;\n\n"]},"metadata":{},"sourceType":"module"}