{"ast":null,"code":"var _jsxFileName = \"/home/luciano/boxGame/client/src/components/auth/Signup.js\";\n// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport { Link } from 'react-router-dom';\nimport \"./Login.scss\"; //signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const username = this.state.username;\n      const password = this.state.password; //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n\n      this.service.signup(username, password).then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        }); //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n\n        this.props.getUser(response.user);\n      }).catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.service = new AuthService();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"titleOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"botton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Sign up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"do you have an account? login\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.error ? 'Error' : ''));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/luciano/boxGame/client/src/components/auth/Signup.js"],"names":["React","Component","AuthService","Link","Signup","constructor","props","handleFormSubmit","event","preventDefault","username","state","password","service","signup","then","response","setState","getUser","user","catch","error","handleChange","name","value","target","render","e"],"mappings":"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","sourcesContent":["// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../services/AuthService'\nimport { Link } from 'react-router-dom';\nimport \"./Login.scss\"\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n\n  render() {\n    return (<div>\n        <h3 className=\"titleOne\">Signup</h3>\n\n        <div className=\"login\">\n          <form onSubmit={this.handleFormSubmit}>\n            <fieldset>\n              <label className=\"user\"></label>\n              <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n            </fieldset>\n\n            <fieldset>\n              <label className=\"password\"></label>\n              <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n            </fieldset>\n          </form>\n          </div>\n\n            <div className=\"botton\">\n              <input type=\"submit\" value=\"Sign up\" />\n            </div>\n\n            {/* aqui va lo de que haga login si tiene cuenta */}\n            <div>\n              <nav className=\"link\">\n                <Link to=\"/login\">do you have an account? login</Link>\n              </nav>\n            </div>\n\n            <h1>{this.state.error ? 'Error' : ''}</h1>\n          </div>\n\n          )\n        }\n      }\n      \nexport default Signup;"]},"metadata":{},"sourceType":"module"}